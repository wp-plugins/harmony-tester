<?php/*Plugin Name: Harmony TesterPlugin URI: http://xiaoxia.de/2012/12/harmony-tester/Description: Harmony Tester is for highlighting and replacing keywords (for mainland China). 和谐测试器是一个用来高亮和替换敏感词汇的插件Version: 1.31Author: 小虾Author URI: http://xiaoxia.de/*//*  Copyright 2012-2013 xiaoxia.de  (email : i@xiaoxia.de)    This program is free software; you can redistribute it and/or modify    it under the terms of the GNU General Public License, version 2, as     published by the Free Software Foundation.    This program is distributed in the hope that it will be useful,    but WITHOUT ANY WARRANTY; without even the implied warranty of    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the    GNU General Public License for more details.    You should have received a copy of the GNU General Public License    along with this program; if not, write to the Free Software    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA*/global $ht_options;$ht_options = get_ht_options();//选项初始化function get_ht_options() {    $get_ht_options = array(        'politic' => 'on',        'porny' => 'on',        'other' => 'on',        'custom' => 'off',        'harmony_post' => 'off',        'replace_word' => '囧囧',        'harmony_comment' => 'off',        'harmony_method' => 'replace',        'custom_keywords' => '',        'obfuscate_word' => '囧'    );    $ht_options     = get_option('harmonytester_options');    if (!empty($ht_options)) {        foreach ($ht_options as $key => $option) {            $get_ht_options[$key] = $option;        }    }    update_option('harmonytester_options', $get_ht_options);    return $get_ht_options;}//读取插件domainif (function_exists('load_plugin_textdomain')) {    load_plugin_textdomain('harmonytester', false, dirname(plugin_basename(__FILE__)) . '/lang/');}//添加一个meta-boxfunction ht_add_custom_box() {    add_meta_box('ht_sectionid', __('Harmony Tester', 'harmonytester'), 'ht_custom_box', 'post');    add_meta_box('ht_sectionid', __('Harmony Tester', 'harmonytester'), 'ht_custom_box', 'page');}function ht_custom_box($post) {    wp_nonce_field(plugin_basename(__FILE__), 'harmonytester');    global $ht_options;?><div id="ht_wrap">    <style>    #ht_wrap #btn{float:right}    #ht_wrap #ctr{line-height:26px}    #ht_wrap #ht_check_btn,#ht_wrap #ht_reset{cursor:pointer}    #ht_wrap input,#ht_wrap img{margin-right:5px;vertical-align:middle}    #ht_wrap label{margin-right:20px}    #ht_wrap .clearfix{clear:both}    #ht_wrap #ht_test_title{padding-bottom:10px;margin-bottom:10px;border-bottom:2px solid #CCC}    #ht_wrap span.keyword_red{background:#F99}    #ht_wrap span.keyword_green{background:#9F9}    #ht_wrap span.keyword_yellow{background:yellow}    #ht_wrap span.keyword_blue{background:#99F}    #ht_content{padding:0 5px;margin-top:1em;background:#FFF;border:1px solid #CCC;border-radius:3px}    </style>    <span id="ctr">        <label for="politic"><input type="checkbox" id="politic" name="politic" <?php if ($ht_options['politic'] == 'on') { echo 'checked="checked"';} ?> /><?php _e('Politic Keywords', 'harmonytester')?><span class="keyword_yellow">__</span></label>        <label for="porny"><input type="checkbox" id="porny" name="porny" <?php if ($ht_options['porny'] == 'on') { echo 'checked="checked"';} ?> /><?php _e('Porny Keywords', 'harmonytester')?><span class="keyword_red">__</span></label>        <label for="other"><input type="checkbox" id="other" name="other" <?php if ($ht_options['other'] == 'on') { echo 'checked="checked"';} ?> /><?php _e('Other Keywords', 'harmonytester')?><span class="keyword_green">__</span></label>        <label for="custom"><input type="checkbox" id="custom" name="custom" <?php if ($ht_options['custom'] == 'on') { echo 'checked="checked"';} ?> /><?php _e('Custom Keywords', 'harmonytester')?><span class="keyword_blue">__</span></label>    </span>    <span id="btn">        <input type="button" id="ht_check_btn" class="button button-primary" onclick="ht_check('<?php bloginfo('url')?>')" value="<?php _e('Test', 'harmonytester' )?>"/>        <input type="button" id="ht_reset" class="button" onclick="jQuery('#ht_content').slideUp()" value="<?php _e('Collapse', 'harmonytester' )?>"/>    </span>    <div class="clearfix"></div>    <div id="ht_content" style="display:none"></div></div><?php}add_action('add_meta_boxes', 'ht_add_custom_box');//注册自定义CSS和JSglobal $pagenow;if ($pagenow == 'post-new.php' || ($pagenow == 'post.php' && ($_GET['action'] == 'edit'))) {    function ht_admin_file() {        wp_enqueue_script('ht_js', plugins_url('/js.js', __FILE__), true);    }    add_action('admin_enqueue_scripts', 'ht_admin_file');}/*检测敏感词*///接受AJAX检测敏感词的动作function ht_check() {    $content = isset($_POST['content']) ? $_POST['content'] : null;    if ($content) {        echo ht_check_keyword($content, $_POST['politic'], $_POST['porny'], $_POST['other'], $_POST['custom']);    }    die;}add_action('wp_ajax_ht_check', 'ht_check');//检测敏感词function ht_check_keyword($content, $politic, $porny, $other, $custom) {    global $ht_options;    $w        = '';    $keywords = array();    if ($porny == 'on')        include('keywords/porny.php');    if (!empty($keywords)) {        foreach ($keywords as $k => $v) {            $k            = base64_decode($k);            $keywords[$k] = '<span class="keyword_red">' . $k . '</span>';        }        $content = strtr($content, $keywords);    }    $keywords = array();    if ($politic == 'on')        include('keywords/politic.php');    if (!empty($keywords)) {        foreach ($keywords as $k => $v) {            $k            = base64_decode($k);            $keywords[$k] = '<span class="keyword_yellow">' . $k . '</span>';        }        $content = strtr($content, $keywords);    }    $keywords = array();    if ($other == 'on')        include('keywords/other.php');    if (!empty($keywords)) {        foreach ($keywords as $k => $v) {            $k            = base64_decode($k);            $keywords[$k] = '<span class="keyword_green">' . $k . '</span>';        }        $content = strtr($content, $keywords);    }    $keywords = array();    if ($custom == 'on' && !empty($ht_options['custom_keywords'])) {        $customs = explode("\n", preg_replace('/($\s*$)|(^\s*^)/m', '', stripslashes($ht_options['custom_keywords'])));        if (!empty($customs)) {            foreach ($customs as $custom) {                $custom   = explode("||", $custom);                if(is_array($custom)){                    $custom = rtrim($custom[0]);                }                $content = preg_replace('/(' . $custom . ')/iu', '<span class="keyword_blue">$1</span>', $content);            }                    }    }    return $content;}/*检测敏感词*//*替换敏感词*/function ht_replace_keyword($content) {    global $ht_options;    $keywords = array();    if ($ht_options['porny'] == 'on')        include('keywords/porny.php');    if ($ht_options['politic'] == 'on')        include('keywords/politic.php');    if ($ht_options['other'] == 'on')        include('keywords/other.php');    $new_keywords = array();    if ($ht_options['harmony_method'] == 'obfuscate') {        $ob = $ht_options['obfuscate_word'];        $ob_pattern1 = '$1' . $ob;        $ob_pattern2 = '/' . $ob . '$/u';        foreach ($keywords as $k => $v) {            $k                = base64_decode($k);            $new_keywords[$k] = preg_replace( $ob_pattern2, '', preg_replace('/(.)/u', $ob_pattern1, $k));        }    } else {        $w = $ht_options['replace_word'];        foreach ($keywords as $k => $v) {            $k                = base64_decode($k);            $new_keywords[$k] = $w;        }    }    unset($keywords);    if ($ht_options['custom'] == 'on' && !empty($ht_options['custom_keywords'])) {        $customs = explode("\n", preg_replace('/($\s*$)|(^\s*^)/m', '', stripslashes($ht_options['custom_keywords'])));        if (!empty($customs)) {            if ($ht_options['harmony_method'] == 'replace') {                $w = stripslashes($ht_options['replace_word']);                foreach ($customs as $custom) {                    if (mb_strstr($custom, '||')){                        $s1 = explode("||", rtrim($custom));                        $content = preg_replace('/(' . $s1[0] . ')/iu', rtrim($s1[1]), $content);                    }else{                        $content = preg_replace('/(' . rtrim($custom) . ')/iu', $w, $content);                    }                }            }else{                $ob = stripslashes($ht_options['obfuscate_word']);                $ob_pattern1 = '$1' . $ob;                $ob_pattern2 = '/' . $ob . '$/iu';                foreach ($customs as $custom) {                    if(mb_strstr($custom, '||')){                        $custom = explode("||", $custom);                        $s2 = rtrim($custom[1]);                        $s1 = $custom[0];                        $content = preg_replace('/(' . $s1 . ')/iu', $s2, $content);                    }else{                        $custom = rtrim($custom);                        $pattern = '/(' . $custom . ')/iu';                        preg_match_all($pattern, $content, $matches);                        $match_to = array();                        foreach ($matches[0] as $match){                            $match_to[$match] = preg_replace( $ob_pattern2, '', preg_replace('/(.)/iu', $ob_pattern1, $match));                        }                        $content = strtr($content, $match_to);                    }                }            }        }    }    if (!empty($new_keywords)) {        $content = strtr($content, $new_keywords);    }    return $content;}//替换方式if ($ht_options['harmony_post'] == 'save') {    add_filter('content_save_pre', 'ht_replace_keyword');    add_filter('title_save_pre', 'ht_replace_keyword');} elseif ($ht_options['harmony_post'] == 'format' && !is_admin()) {    add_filter('the_content', 'ht_replace_keyword');    add_filter('wp_title', 'ht_replace_keyword');    add_filter('the_title', 'ht_replace_keyword');}if ($ht_options['harmony_comment'] == 'save') {    add_filter('pre_comment_content', 'ht_replace_keyword');    add_filter('pre_comment_author_name', 'ht_replace_keyword');} elseif ($ht_options['harmony_comment'] == 'format' && !is_admin()) {    add_filter('comment_text', 'ht_replace_keyword');    add_filter('comment_author', 'ht_replace_keyword');}/*替换敏感词*//*设置界面*///设置菜单function ht_wrap() {    global $ht_options;        if (isset($_POST['update_ht_settings'])) {        //wp_nonce check        check_admin_referer('ht_update_options');                if (empty($_POST['uninstall'])) {                        if (empty($_POST['politic'])) {                $ht_options['politic'] = 'off';            } else {                $ht_options['politic'] = 'on';            }            if (empty($_POST['porny'])) {                $ht_options['porny'] = 'off';            } else {                $ht_options['porny'] = 'on';            }            if (empty($_POST['other'])) {                $ht_options['other'] = 'off';            } else {                $ht_options['other'] = 'on';            }            if (empty($_POST['custom'])) {                $ht_options['custom'] = 'off';            } else {                $ht_options['custom'] = 'on';            }            if (isset($_POST['harmony_post'])) {                $ht_options['harmony_post'] = $_POST['harmony_post'];            }            if (isset($_POST['harmony_comment'])) {                $ht_options['harmony_comment'] = $_POST['harmony_comment'];            }            if (isset($_POST['harmony_method'])) {                $ht_options['harmony_method'] = $_POST['harmony_method'];            }            if(trim($_POST['obfuscate_word'])){                $ht_options['obfuscate_word'] = trim($_POST['obfuscate_word']);            }else{                $ht_options['obfuscate_word'] = '囧';            }            $ht_options['replace_word']    = trim($_POST['replace_word']);            $ht_options['custom_keywords'] = $_POST['custom_keywords'];            update_option('harmonytester_options', $ht_options);?>        <div class="updated"><p><strong><?php _e('Options Updated.', 'harmonytester')?></strong></p></div><?php        }else{            global $wpdb;            $wpdb->query("DELETE FROM $wpdb->options WHERE option_name = 'harmonytester_options'");            $plugin = plugin_basename( __FILE__ );            deactivate_plugins( $plugin );?>        <div class="error"><p><strong><?php _e('Harmony Tester is deactived. Go to Plugins and Delete it.', 'harmonytester')?></strong></p></div><?php        }    }?>    <div id="ht_wrap">    <style>    #ht_wrap input[type=checkbox]{margin-right:5px !important}    #ht_wrap label{margin-right:20px !important}    #ht_wrap h2{color:#174F69;font-size:23px;line-height:29px;padding:9px 15px 4px 0;font-weight:normal}    #ht_wrap select,input[type="text"]{width:150px;margin-right:10px}    #ht_wrap textarea{min-width:48em;min-height:8em;width:48em;height:8em}    #ht_wrap .desc{margin-right:10px;width:16em;display:inline-block}    #ht_wrap .info{color:green}    #ht_wrap .sub{margin-left:2em}    </style>    <form method="post" action="<?php echo esc_attr($_SERVER["REQUEST_URI"]); ?>">        <?php if ( function_exists('wp_nonce_field') )wp_nonce_field('ht_update_options')?>        <div id="icon-options-general" class="icon32"></div>        <h2><?php _e('Harmony Tester Options', 'harmonytester')?></h2>        <div class="sub"><h3><?php _e('Keywords Library', 'harmonytester')?></h3>        <div class="sub">            <p><label for="politic"><input type="checkbox" id="politic" name="politic" <?php if ($ht_options['politic'] == 'on') { echo 'checked="checked"';} ?> /><?php _e('Politic Keywords', 'harmonytester')?></label><label for="porny"><input type="checkbox" id="porny" name="porny" <?php if ($ht_options['porny'] == 'on') { echo 'checked="checked"';} ?> /><?php _e('Porny Keywords', 'harmonytester')?></label><label for="other"><input type="checkbox" id="other" name="other" <?php if ($ht_options['other'] == 'on') { echo 'checked="checked"';} ?> /><?php _e('Other Keywords', 'harmonytester')?></label><label for="custom"><input type="checkbox" id="custom" name="custom" <?php if ($ht_options['custom'] == 'on') { echo 'checked="checked"';} ?> /><?php _e('Custom Keywords (One keyword per line; Case-insensitive)', 'harmonytester')?></label></p>            <p><textarea name="custom_keywords" id="ht_custom"><?php echo stripslashes($ht_options['custom_keywords'])?></textarea></p>            <p><span class="info"><?php _e('You can use regular expression. eg. "AB[CD]" <br/>You can indentify the word to replace with: Use "||" to separate the keyword and the word you want to replace with. eg."AB[CD]||CBA"<br/>Note: Priority of custom library is higher then other built-in keywords libraris', 'harmonytester')?></span></p>        </div></div>        <div class="sub"><h3><?php _e('Harmonize', 'harmonytester')?></h3>        <div class="sub">            <p><span class="desc"><?php _e('Posts & Pages (title and content)', 'harmonytester')?></span><select name="harmony_post" id="harmony_post"><option value="off" <?php if ($ht_options['harmony_post'] == 'off') { echo 'selected="selected"';} ?> /><?php _e('Off', 'harmonytester')?></option><option value="save" <?php if ($ht_options['harmony_post'] == 'save') { echo 'selected="selected"';} ?> /><?php _e('On Saving', 'harmonytester')?></option><option value="format" <?php if ($ht_options['harmony_post'] == 'format') { echo 'selected="selected"';} ?> /><?php _e('On Formatting', 'harmonytester')?></option></select><span class="info"><?php _e('"Off" is recommended. Test keywords in edit screen.','harmonytester')?></span></p>            <p><span class="desc"><?php _e('Comments (name and text)', 'harmonytester')?></span><select name="harmony_comment" id="harmony_comment"><option value="off" <?php if ($ht_options['harmony_comment'] == 'off') { echo 'selected="selected"';} ?> /><?php _e('Off', 'harmonytester')?></option><option value="save" <?php if ($ht_options['harmony_comment'] == 'save') { echo 'selected="selected"';} ?> /><?php _e('On Saving', 'harmonytester')?></option><option value="format" <?php if ($ht_options['harmony_comment'] == 'format') { echo 'selected="selected"';} ?> /><?php _e('On Formatting', 'harmonytester')?></option></select><span class="info"><?php _e('"On Saving" is recommended.','harmonytester')?></span></p>            <p><span class="desc"><?php _e('Method', 'harmonytester')?></span><select name="harmony_method" id="harmony_method"><option value="replace" <?php if ($ht_options['harmony_method'] == 'replace') { echo 'selected="selected"';} ?> /><?php _e('Replace', 'harmonytester')?></option><option value="obfuscate" <?php if ($ht_options['harmony_method'] == 'obfuscate') { echo 'selected="selected"';} ?> /><?php _e('Obfuscate', 'harmonytester')?></option></select><span class="info"><?php _e('Replace: "Hello" => "World"; Obfuscate: "Hello" => "H*e*l*l*o"','harmonytester')?></span></p>            <p><span class="desc"><label for="replace_word"><?php _e('Replace With', 'harmonytester')?></span><input type="text" id="replace_word" name="replace_word" value="<?php echo stripslashes($ht_options['replace_word'])?>"/><span class="info"><?php _e('Leave this blank to delete all keywords.','harmonytester')?></span></p>            <p><span class="desc"><label for="obfuscate_word"><?php _e('Obfuscate With', 'harmonytester')?></span><input type="text" id="obfuscate_word" name="obfuscate_word" value="<?php echo stripslashes($ht_options['obfuscate_word'])?>"/><span class="info"><?php _e('Fill in this with one or more character(s)','harmonytester')?></span></p>        </div></div>        <div class="sub"><h3><?php _e('Uninstall', 'harmonytester')?></h3>        <div class="sub">            <p><label for="uninstall"><input type="checkbox" id="uninstall" name="uninstall" onclick="if(this.checked==true){return confirm('<?php _e('Are you sure to uninstall Harmony Tester totally?', 'harmonytester')?>')}"/><?php _e('Uninstall Harmony Tester', 'harmonytester')?></label></p>        </div></div>        <div class="submit"><input type="submit" name="update_ht_settings" class="button button-primary" value="<?php _e('Update Options', 'harmonytester') ?>" /></div>        <p><span class="info" style="color:grey"><?php _e('Harmony Tester | <a href="http://xiaoxia.de/2012/12/harmony-tester/">Report bugs</a> | <a href="mailto:i@xiaoxia.de">Email me</a>','harmonytester')?></span></p>    </form><?php}//插入设置菜单function ht_add_admin_page() {    if (function_exists('add_options_page')) {        add_options_page(__('Harmony Tester', 'harmonytester'), __('Harmony Tester', 'harmonytester'), 'manage_options', basename(__FILE__), 'ht_wrap');    }}add_action('admin_menu', 'ht_add_admin_page');/*设置界面*/?>