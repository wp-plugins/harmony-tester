<?php/*Plugin Name: Harmony TesterPlugin URI: http://xiaoxia.de/Description: Harmony Tester is a plugin for highlighting and replacing keywords. 和谐测试器是一个用来高亮和替换敏感词汇的插件Version: 1.0Author: 小虾Author URI: http://xiaoxia.de/*//*  Copyright 2013 xiaoxia.de  (email : i@xiaoxia.de)    This program is free software; you can redistribute it and/or modify    it under the terms of the GNU General Public License, version 2, as     published by the Free Software Foundation.    This program is distributed in the hope that it will be useful,    but WITHOUT ANY WARRANTY; without even the implied warranty of    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the    GNU General Public License for more details.    You should have received a copy of the GNU General Public License    along with this program; if not, write to the Free Software    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA*/define( 'HARMONY_TESTER_VER', '1.0' );define( 'HARMONY_TESTER_URL', plugin_dir_url(__FILE__) );global $ht_options;$ht_options = get_ht_options();//选项初始化function get_ht_options() {    $get_ht_options = array(        'politic' => 'on',        'porny' => 'on',        'other' => 'on',        'custom' => 'off',        'harmony_post' => 'off',        'harmony_word' => '囧囧',        'harmony_comment' => 'off',        'custom_keywords' => ''    );    $ht_options     = get_option('harmonytester_options');    if (!empty($ht_options)) {        foreach ($ht_options as $key => $option) {            $get_ht_options[$key] = $option;        }    }    update_option('harmonytester_options', $get_ht_options);    return $get_ht_options;}//读取插件domainif (function_exists('load_plugin_textdomain')) {    load_plugin_textdomain('harmonytester', false, dirname(plugin_basename(__FILE__)) . '/lang/');}//添加一个meta-boxfunction ht_add_custom_box() {    add_meta_box('ht_sectionid', __('Harmony Tester', 'harmonytester'), 'ht_custom_box', 'post');    add_meta_box('ht_sectionid', __('Harmony Tester', 'harmonytester'), 'ht_custom_box', 'page');}function ht_custom_box($post) {    wp_nonce_field(plugin_basename(__FILE__), 'harmonytester');    global $ht_options;?><div id="ht_wrap">    <span id="ctr">		<label for="politic"><input type="checkbox" id="politic" name="politic" <?php if ($ht_options['politic'] == 'on') { echo 'checked="checked"';} ?> /><span class="keyword_yellow"><?php _e('Politic Keywords', 'harmonytester')?></label>        <label for="porny"><input type="checkbox" id="porny" name="porny" <?php if ($ht_options['porny'] == 'on') { echo 'checked="checked"';} ?> /><span class="keyword_red"><?php _e('Porny Keywords', 'harmonytester')?></span></label>        <label for="other"><input type="checkbox" id="other" name="other" <?php if ($ht_options['other'] == 'on') { echo 'checked="checked"';} ?> /><span class="keyword_green"><?php _e('Other Keywords', 'harmonytester')?></label>        <label for="custom"><input type="checkbox" id="custom" name="custom" <?php if ($ht_options['custom'] == 'on') { echo 'checked="checked"';} ?> /><span class="keyword_blue"><?php _e('Custom Keywords', 'harmonytester')?></label>    </span>    <span id="btn">        <input type="button" id="ht_check_btn" onclick="ht_check('<?php bloginfo('url')?>')" value="<?php _e('Check Content', 'harmonytester' )?>"/>        <input type="button" id="ht_reset" onclick="jQuery('#ht_content').slideUp().text('')" value="<?php _e('Collapse', 'harmonytester' )?>"/>    </span>    <div class="clearfix"></div>    <div id="ht_content" style="display:none"></div></div><?php}add_action('add_meta_boxes', 'ht_add_custom_box');//注册自定义CSS和JSglobal $pagenow;if ($pagenow == 'post-new.php' || ($pagenow == 'post.php' && ($_GET['action'] == 'edit'))) {    function ht_admin_file() {        wp_enqueue_script('ht_js', plugins_url('/js.js', __FILE__), true);        wp_register_style('ht_css', plugins_url('/css.css', __FILE__));        wp_enqueue_style('ht_css');    }    add_action('admin_enqueue_scripts', 'ht_admin_file');}/*检测敏感词*///接受AJAX检测敏感词的动作function ht_check() {    $content = isset($_POST['content']) ? $_POST['content'] : null;    if ($content) {        echo ht_check_keyword($content, $_POST['politic'], $_POST['porny'], $_POST['other'], $_POST['custom']);    }    die;}add_action('wp_ajax_ht_check', 'ht_check');//检测敏感词function ht_check_keyword($content, $politic, $porny, $other, $custom) {    global $ht_options;    $w        = '';    $keywords = array();    if ($porny == 'on')        include('keywords/porny.php');    if (!empty($keywords)) {        foreach ($keywords as $key => $value) {			$key = base64_decode($key);            $keywords[$key] = '<span class="keyword_red">' . $key . '</span>';        }        $content = strtr($content, $keywords);    }    $keywords = array();    if ($politic == 'on')        include('keywords/politic.php');    if (!empty($keywords)) {        foreach ($keywords as $key => $value) {			$key = base64_decode($key);            $keywords[$key] = '<span class="keyword_yellow">' . $key . '</span>';        }        $content = strtr($content, $keywords);    }    $keywords = array();    if ($other == 'on')        include('keywords/other.php');    if (!empty($keywords)) {        foreach ($keywords as $key => $value) {			$key = base64_decode($key);            $keywords[$key] = '<span class="keyword_green">' . $key . '</span>';        }        $content = strtr($content, $keywords);    }    $keywords = array();    if ($custom == 'on' && !empty($ht_options['custom_keywords'])) {        $customs = explode("\n", preg_replace('/($\s*$)|(^\s*^)/m', '', $ht_options['custom_keywords']));        if (!empty($customs)) {            foreach ($customs as $custom) {                $custom   = trim($custom);                $keywords = array_merge($keywords, array(                    $custom => '<span class="keyword_blue">' . $custom . '</span>'                ));            }            $content = strtr($content, $keywords);        }    }    return $content;}/*检测敏感词*//*替换敏感词*/function ht_replace_keyword($content) {    global $ht_options;    $w        = $ht_options['harmony_word'];    $keywords = array();    if ($ht_options['porny'] == 'on')        include('keywords/porny.php');    if ($ht_options['politic'] == 'on')        include('keywords/politic.php');    if ($ht_options['other'] == 'on')        include('keywords/other.php');	$new_keywords = array();	foreach ($keywords as $key => $value){		$key = base64_decode($key);		$new_keywords[$key] = $w;	}    if ($ht_options['custom'] == 'on' && !empty($ht_options['custom_keywords'])) {        $customs = explode("\n", preg_replace('/($\s*$)|(^\s*^)/m', '', $ht_options['custom_keywords']));        if (!empty($customs)) {            foreach ($customs as $custom) {                $custom   = trim($custom);                $new_keywords = array_merge($new_keywords, array(                    $custom => $w                ));            }        }    }    if (!empty($new_keywords)) {        $content = strtr($content, $new_keywords);    }    return $content;}function ht_replace_keyword_comment($comment_content) {    global $ht_options;    $w        = $ht_options['harmony_word'];    $keywords = array();    if ($ht_options['porny'] == 'on')        include('keywords/porny.php');    if ($ht_options['politic'] == 'on')        include('keywords/politic.php');    if ($ht_options['other'] == 'on')        include('keywords/other.php');	$new_keywords = array();	foreach ($keywords as $key => $value){		$key = base64_decode($key);		$new_keywords[$key] = $w;	}	unset($keywords);    if ($ht_options['custom'] == 'on' && !empty($ht_options['custom_keywords'])) {        $customs = explode("\n", preg_replace('/($\s*$)|(^\s*^)/m', '', $ht_options['custom_keywords']));        if (!empty($customs)) {            foreach ($customs as $custom) {                $custom   = trim($custom);                $new_keywords = array_merge($new_keywords, array(                    $custom => $w                ));            }        }    }    if (!empty($new_keywords)) {        $comment_content = strtr($comment_content, $new_keywords);    }    return $comment_content;}//替换方式if ($ht_options['harmony_post'] == 'save') {    add_filter('content_save_pre', 'ht_replace_keyword');} elseif ($ht_options['harmony_post'] == 'format') {    add_filter('the_content', 'ht_replace_keyword');}if ($ht_options['harmony_comment'] == 'save') {    add_filter('pre_comment_content', 'ht_replace_keyword_comment');} elseif ($ht_options['harmony_comment'] == 'format') {    add_filter('comment_text', 'ht_replace_keyword_comment');}/*替换敏感词*//*设置界面*///设置菜单function ht_wrap() {    global $ht_options;        if (isset($_POST['update_ht_settings'])) {        //wp_nonce check        check_admin_referer('ht_update_options');                if (empty($_POST['politic'])) {            $ht_options['politic'] = 'off';        } else {            $ht_options['politic'] = 'on';        }        if (empty($_POST['porny'])) {            $ht_options['porny'] = 'off';        } else {            $ht_options['porny'] = 'on';        }        if (empty($_POST['other'])) {            $ht_options['other'] = 'off';        } else {            $ht_options['other'] = 'on';        }        if (empty($_POST['custom'])) {            $ht_options['custom'] = 'off';        } else {            $ht_options['custom'] = 'on';        }        if (isset($_POST['harmony_post'])) {            $ht_options['harmony_post'] = $_POST['harmony_post'];        }        $ht_options['harmony_word']    = $_POST['harmony_word'];        $ht_options['custom_keywords'] = $_POST['custom_keywords'];        if (isset($_POST['harmony_comment'])) {            $ht_options['harmony_comment'] = $_POST['harmony_comment'];        }        update_option('harmonytester_options', $ht_options);?>        <div class="updated"><p><strong><?php _e('Options Updated.', 'harmonytester')?></strong></p></div><?php    }?>    <div id="ht_wrap">    <style>    #ht_wrap {width:800px}    #ht_wrap *{font-family:Arial,Helvetica,"Hiragino Sans GB","Microsoft YaHei",SimSun}    #ht_wrap input[type=checkbox]{margin-right:5px !important}    #ht_wrap label{margin-right:20px !important}    #ht_wrap select,input[type="text"]{width:150px}    #ht_wrap textarea{min-width:50em;min-height:5em}    #ht_wrap .desc{margin-right:10px;width:12em;display:inline-block}    #ht_wrap .info{color:green;margin-left:10px}    #ht_wrap .sub{margin-left:2em}    </style>    <form method="post" action="<?php echo esc_attr($_SERVER["REQUEST_URI"]); ?>">        <?php if ( function_exists('wp_nonce_field') )wp_nonce_field('ht_update_options')?>        <h2><?php _e('Harmony Tester Options', 'harmonytester')?></h2><br/>        <div class="sub"><h3><?php _e('Keywords Library', 'harmonytester')?></h3>        <div class="sub">            <p><label for="politic"><input type="checkbox" id="politic" name="politic" <?php if ($ht_options['politic'] == 'on') { echo 'checked="checked"';} ?> /><?php _e('Politic Keywords', 'harmonytester')?></label><label for="porny"><input type="checkbox" id="porny" name="porny" <?php if ($ht_options['porny'] == 'on') { echo 'checked="checked"';} ?> /><?php _e('Porny Keywords', 'harmonytester')?></label><label for="other"><input type="checkbox" id="other" name="other" <?php if ($ht_options['other'] == 'on') { echo 'checked="checked"';} ?> /><?php _e('Other Keywords', 'harmonytester')?></label><input type="checkbox" id="custom" name="custom" <?php if ($ht_options['custom'] == 'on') { echo 'checked="checked"';} ?> /><?php _e('Custom Keywords (One keyword per line)', 'harmonytester')?></label></p>            <p><textarea name="custom_keywords" id="ht_custom"><?php echo $ht_options['custom_keywords']?></textarea></p>        </div></div><br/>        <div class="sub"><h3><?php _e('Harmonize (Replace Keywords)', 'harmonytester')?></h3>        <div class="sub">            <p><span class="desc"><?php _e('Posts & Pages', 'harmonytester')?></span><select name="harmony_post" id="harmony_post"><option value="off" <?php if ($ht_options['harmony_post'] == 'off') { echo 'selected="selected"';} ?> /><?php _e('Off', 'harmonytester')?></option><option value="save" <?php if ($ht_options['harmony_post'] == 'save') { echo 'selected="selected"';} ?> /><?php _e('On Saving', 'harmonytester')?></option><option value="format" <?php if ($ht_options['harmony_post'] == 'format') { echo 'selected="selected"';} ?> /><?php _e('On Formatting', 'harmonytester')?></option></select><span class="info"><?php _e('"On Saving" is recommended.','harmonytester')?></span></p>            <p><span class="desc"><?php _e('Comments', 'harmonytester')?></span><select name="harmony_comment" id="harmony_comment"><option value="off" <?php if ($ht_options['harmony_comment'] == 'off') { echo 'selected="selected"';} ?> /><?php _e('Off', 'harmonytester')?></option><option value="save" <?php if ($ht_options['harmony_comment'] == 'save') { echo 'selected="selected"';} ?> /><?php _e('On Saving', 'harmonytester')?></option><option value="format" <?php if ($ht_options['harmony_comment'] == 'format') { echo 'selected="selected"';} ?> /><?php _e('On Formatting', 'harmonytester')?></option></select><span class="info"><?php _e('"On Saving" is recommended.','harmonytester')?></span></p>            <p><span class="desc"><label for="harmony_word"><?php _e('Replace Keywords By', 'harmonytester')?></span><input type="text" id="harmony_word" name="harmony_word" value="<?php echo $ht_options['harmony_word']?>"/><span class="info"><?php _e('Leave this blank to delete all keywords.','harmonytester')?></span></p>        </div></div><br/>        <div class="submit"><input type="submit" name="update_ht_settings" value="<?php _e('Update Options', 'harmonytester') ?>" /></div>    </form><?php}//插入设置菜单function ht_add_admin_page() {    if (function_exists('add_options_page')) {        add_options_page(__('Harmony Tester', 'harmonytester'), __('Harmony Tester', 'harmonytester'), 'manage_options', basename(__FILE__), 'ht_wrap');    }}add_action('admin_menu', 'ht_add_admin_page');/*设置界面*/?>